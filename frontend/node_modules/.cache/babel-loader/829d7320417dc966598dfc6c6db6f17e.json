{"ast":null,"code":"class Api {\n  constructor() {\n    this._baseUrl = \"http://www.aroundJake.students.nomoredomainssbs.ru/\";\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Error: ${res.status}`);\n    }\n\n    return res.json();\n  } //__________________________________________________________________________\n  //\n\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}cards`, {\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  getProfileInfo(token) {\n    return fetch(`${this._baseUrl}users/me`, {\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  updateProfile(_ref, token) {\n    let {\n      user\n    } = _ref;\n    return fetch(`${this._baseUrl}users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: user.name,\n        about: user.about\n      })\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  updateProfilePicture(_ref2, token) {\n    let {\n      user\n    } = _ref2;\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        avatar: user.avatar\n      })\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  postNewCard(_ref3, token) {\n    let {\n      newCard\n    } = _ref3;\n    return fetch(`${this._baseUrl}cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: newCard.name,\n        link: newCard.link\n      })\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  changeLikeCardStatus(cardId, isLiked, token) {\n    return isLiked ? this.addLike(cardId) : this.removeLike(cardId);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}users`, {\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-12\",\n  headers: {\n    authorization: \"4661177c-aa9a-4f93-9cdc-32dae0d4e0e3\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","_baseUrl","_getResponseData","res","ok","Promise","reject","status","json","getInitialCards","fetch","headers","authorization","token","then","getProfileInfo","updateProfile","user","method","body","JSON","stringify","name","about","updateProfilePicture","avatar","postNewCard","newCard","link","deleteCard","cardId","changeLikeCardStatus","isLiked","addLike","removeLike","getUserInfo","_headers","api","baseUrl"],"sources":["/Users/jakejohnson/Desktop/Practicum/react-around-api-full/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor() {\n    this._baseUrl = \"http://www.aroundJake.students.nomoredomainssbs.ru/\";\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Error: ${res.status}`);\n    }\n    return res.json();\n  }\n  //__________________________________________________________________________\n  //\n  getInitialCards() {\n    return fetch(`${this._baseUrl}cards`, {\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  getProfileInfo(token) {\n    return fetch(`${this._baseUrl}users/me`, {\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  updateProfile({ user }, token) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: user.name,\n        about: user.about,\n      }),\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  updateProfilePicture({ user }, token) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar: user.avatar,\n      }),\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  postNewCard({ newCard }, token) {\n    return fetch(`${this._baseUrl}cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: newCard.name,\n        link: newCard.link,\n      }),\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  changeLikeCardStatus(cardId, isLiked, token) {\n    return isLiked ? this.addLike(cardId) : this.removeLike(cardId);\n  }\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  getUserInfo() {\n    return fetch(`${this._baseUrl}users`, {\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-12\",\n  headers: {\n    authorization: \"4661177c-aa9a-4f93-9cdc-32dae0d4e0e3\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"AAAA,MAAMA,GAAN,CAAU;EACRC,WAAW,GAAG;IACZ,KAAKC,QAAL,GAAgB,qDAAhB;EACD;;EACDC,gBAAgB,CAACC,GAAD,EAAM;IACpB,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;MACX,OAAOC,OAAO,CAACC,MAAR,CAAgB,UAASH,GAAG,CAACI,MAAO,EAApC,CAAP;IACD;;IACD,OAAOJ,GAAG,CAACK,IAAJ,EAAP;EACD,CATO,CAUR;EACA;;;EACAC,eAAe,GAAG;IAChB,OAAOC,KAAK,CAAE,GAAE,KAAKT,QAAS,OAAlB,EAA0B;MACpCU,OAAO,EAAE;QACPC,aAAa,EAAG,WAAUC,KAAM,EADzB;QAEP,gBAAgB;MAFT;IAD2B,CAA1B,CAAL,CAKJC,IALI,CAKEX,GAAD,IAAS,KAAKD,gBAAL,CAAsBC,GAAtB,CALV,CAAP;EAMD,CAnBO,CAoBR;EACA;;;EACAY,cAAc,CAACF,KAAD,EAAQ;IACpB,OAAOH,KAAK,CAAE,GAAE,KAAKT,QAAS,UAAlB,EAA6B;MACvCU,OAAO,EAAE;QACPC,aAAa,EAAG,WAAUC,KAAM,EADzB;QAEP,gBAAgB;MAFT;IAD8B,CAA7B,CAAL,CAKJC,IALI,CAKEX,GAAD,IAAS,KAAKD,gBAAL,CAAsBC,GAAtB,CALV,CAAP;EAMD,CA7BO,CA8BR;EACA;;;EACAa,aAAa,OAAWH,KAAX,EAAkB;IAAA,IAAjB;MAAEI;IAAF,CAAiB;IAC7B,OAAOP,KAAK,CAAE,GAAE,KAAKT,QAAS,UAAlB,EAA6B;MACvCiB,MAAM,EAAE,OAD+B;MAEvCP,OAAO,EAAE;QACPC,aAAa,EAAG,WAAUC,KAAM,EADzB;QAEP,gBAAgB;MAFT,CAF8B;MAMvCM,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,IAAI,EAAEL,IAAI,CAACK,IADQ;QAEnBC,KAAK,EAAEN,IAAI,CAACM;MAFO,CAAf;IANiC,CAA7B,CAAL,CAUJT,IAVI,CAUEX,GAAD,IAAS,KAAKD,gBAAL,CAAsBC,GAAtB,CAVV,CAAP;EAWD,CA5CO,CA6CR;EACA;;;EACAqB,oBAAoB,QAAWX,KAAX,EAAkB;IAAA,IAAjB;MAAEI;IAAF,CAAiB;IACpC,OAAOP,KAAK,CAAE,GAAE,KAAKT,QAAS,iBAAlB,EAAoC;MAC9CiB,MAAM,EAAE,OADsC;MAE9CP,OAAO,EAAE;QACPC,aAAa,EAAG,WAAUC,KAAM,EADzB;QAEP,gBAAgB;MAFT,CAFqC;MAM9CM,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBI,MAAM,EAAER,IAAI,CAACQ;MADM,CAAf;IANwC,CAApC,CAAL,CASJX,IATI,CASEX,GAAD,IAAS,KAAKD,gBAAL,CAAsBC,GAAtB,CATV,CAAP;EAUD,CA1DO,CA2DR;EACA;;;EACAuB,WAAW,QAAcb,KAAd,EAAqB;IAAA,IAApB;MAAEc;IAAF,CAAoB;IAC9B,OAAOjB,KAAK,CAAE,GAAE,KAAKT,QAAS,OAAlB,EAA0B;MACpCiB,MAAM,EAAE,MAD4B;MAEpCP,OAAO,EAAE;QACPC,aAAa,EAAG,WAAUC,KAAM,EADzB;QAEP,gBAAgB;MAFT,CAF2B;MAMpCM,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,IAAI,EAAEK,OAAO,CAACL,IADK;QAEnBM,IAAI,EAAED,OAAO,CAACC;MAFK,CAAf;IAN8B,CAA1B,CAAL,CAUJd,IAVI,CAUEX,GAAD,IAAS,KAAKD,gBAAL,CAAsBC,GAAtB,CAVV,CAAP;EAWD,CAzEO,CA0ER;EACA;;;EACA0B,UAAU,CAACC,MAAD,EAAS;IACjB,OAAOpB,KAAK,CAAE,GAAE,KAAKT,QAAS,SAAQ6B,MAAO,EAAjC,EAAoC;MAC9CZ,MAAM,EAAE,QADsC;MAE9CP,OAAO,EAAE;QACPC,aAAa,EAAG,WAAUC,KAAM,EADzB;QAEP,gBAAgB;MAFT;IAFqC,CAApC,CAAL,CAMJC,IANI,CAMEX,GAAD,IAAS,KAAKD,gBAAL,CAAsBC,GAAtB,CANV,CAAP;EAOD,CApFO,CAqFR;EACA;;;EACA4B,oBAAoB,CAACD,MAAD,EAASE,OAAT,EAAkBnB,KAAlB,EAAyB;IAC3C,OAAOmB,OAAO,GAAG,KAAKC,OAAL,CAAaH,MAAb,CAAH,GAA0B,KAAKI,UAAL,CAAgBJ,MAAhB,CAAxC;EACD;;EACDG,OAAO,CAACH,MAAD,EAAS;IACd,OAAOpB,KAAK,CAAE,GAAE,KAAKT,QAAS,eAAc6B,MAAO,EAAvC,EAA0C;MACpDZ,MAAM,EAAE,KAD4C;MAEpDP,OAAO,EAAE;QACPC,aAAa,EAAG,WAAUC,KAAM,EADzB;QAEP,gBAAgB;MAFT;IAF2C,CAA1C,CAAL,CAMJC,IANI,CAMEX,GAAD,IAAS,KAAKD,gBAAL,CAAsBC,GAAtB,CANV,CAAP;EAOD,CAlGO,CAmGR;EACA;;;EACA+B,UAAU,CAACJ,MAAD,EAAS;IACjB,OAAOpB,KAAK,CAAE,GAAE,KAAKT,QAAS,eAAc6B,MAAO,EAAvC,EAA0C;MACpDZ,MAAM,EAAE,QAD4C;MAEpDP,OAAO,EAAE;QACPC,aAAa,EAAG,WAAUC,KAAM,EADzB;QAEP,gBAAgB;MAFT;IAF2C,CAA1C,CAAL,CAMJC,IANI,CAMEX,GAAD,IAAS,KAAKD,gBAAL,CAAsBC,GAAtB,CANV,CAAP;EAOD,CA7GO,CA8GR;EACA;;;EACAgC,WAAW,GAAG;IACZ,OAAOzB,KAAK,CAAE,GAAE,KAAKT,QAAS,OAAlB,EAA0B;MACpCU,OAAO,EAAE,KAAKyB;IADsB,CAA1B,CAAL,CAEJtB,IAFI,CAEEX,GAAD,IAAS,KAAKD,gBAAL,CAAsBC,GAAtB,CAFV,CAAP;EAGD;;AApHO;;AAuHV,MAAMkC,GAAG,GAAG,IAAItC,GAAJ,CAAQ;EAClBuC,OAAO,EAAE,6CADS;EAElB3B,OAAO,EAAE;IACPC,aAAa,EAAE,sCADR;IAEP,gBAAgB;EAFT;AAFS,CAAR,CAAZ;AAQA,eAAeyB,GAAf"},"metadata":{},"sourceType":"module"}