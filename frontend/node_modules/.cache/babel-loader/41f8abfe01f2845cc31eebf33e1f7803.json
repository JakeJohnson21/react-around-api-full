{"ast":null,"code":"class Api {\n  constructor(token) {\n    this._baseUrl = \"http://www.aroundJake.students.nomoredomainssbs.ru/\";\n    this.token = token;\n  }\n\n  getToken(token) {}\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Error: ${res.status}`);\n    }\n\n    return res.json();\n  } //__________________________________________________________________________\n  //\n\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}cards`, {\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  getProfileInfo(token) {\n    return fetch(`${this._baseUrl}users/me`, {\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  updateProfile(_ref, token) {\n    let {\n      user\n    } = _ref;\n    return fetch(`${this._baseUrl}users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: user.name,\n        about: user.about\n      })\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  updateProfilePicture(_ref2, token) {\n    let {\n      user\n    } = _ref2;\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        avatar: user.avatar\n      })\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  postNewCard(_ref3, token) {\n    let {\n      newCard\n    } = _ref3;\n    return fetch(`${this._baseUrl}cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name: newCard.name,\n        link: newCard.link\n      })\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  changeLikeCardStatus(cardId, isLiked, token) {\n    return isLiked ? this.addLike(cardId) : this.removeLike(cardId);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => this._getResponseData(res));\n  } //__________________________________________________________________________\n  //\n\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}users`, {\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-12\",\n  headers: {\n    authorization: \"4661177c-aa9a-4f93-9cdc-32dae0d4e0e3\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","token","_baseUrl","getToken","_getResponseData","res","ok","Promise","reject","status","json","getInitialCards","fetch","headers","authorization","then","getProfileInfo","updateProfile","user","method","body","JSON","stringify","name","about","updateProfilePicture","avatar","postNewCard","newCard","link","deleteCard","cardId","changeLikeCardStatus","isLiked","addLike","removeLike","getUserInfo","_headers","api","baseUrl"],"sources":["/Users/jakejohnson/Desktop/Practicum/react-around-api-full/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(token) {\n    this._baseUrl = \"http://www.aroundJake.students.nomoredomainssbs.ru/\";\n    this.token = token;\n  }\n\n  getToken(token) {}\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Error: ${res.status}`);\n    }\n    return res.json();\n  }\n  //__________________________________________________________________________\n  //\n  getInitialCards() {\n    return fetch(`${this._baseUrl}cards`, {\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  getProfileInfo(token) {\n    return fetch(`${this._baseUrl}users/me`, {\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  updateProfile({ user }, token) {\n    return fetch(`${this._baseUrl}users/me`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: user.name,\n        about: user.about,\n      }),\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  updateProfilePicture({ user }, token) {\n    return fetch(`${this._baseUrl}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        avatar: user.avatar,\n      }),\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  postNewCard({ newCard }, token) {\n    return fetch(`${this._baseUrl}cards`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: newCard.name,\n        link: newCard.link,\n      }),\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  changeLikeCardStatus(cardId, isLiked, token) {\n    return isLiked ? this.addLike(cardId) : this.removeLike(cardId);\n  }\n  addLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: `Bearer\" ${token}`,\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => this._getResponseData(res));\n  }\n  //__________________________________________________________________________\n  //\n  getUserInfo() {\n    return fetch(`${this._baseUrl}users`, {\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-12\",\n  headers: {\n    authorization: \"4661177c-aa9a-4f93-9cdc-32dae0d4e0e3\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}